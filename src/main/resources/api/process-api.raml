#%RAML 1.0
title: Employee onborading process API
version: v2.0

types:
  Employee: !include dataTypes/Employee.raml
  ErrorResponse: !include dataTypes/ErrorResponse.raml
  SuccessResponse: !include dataTypes/SuccessResponse.raml

traits:
  employeeSearch: !include traits/trait-collection.raml

/employees:
  displayName: Start generation of employees 
  post:
    displayName: Create Employee
    description: |
      Creates the employee in all the system APIs
    responses:
      202:
        body:
          application/json:
            example: {
              "status": "Accepted"
            }
        description: Accepted and sent for processing
        headers:
          Location:
            description: The url where to check the asynchronous process status
            example: [ http://{hostname}/queue/elements/{element-id} ]

    body: 
      application/json:
        type: Employee
        example: !include examples/post_employee_example.json
      
  /{id}:
    displayName: Get Employee process status with specific ID
    uriParameters:
      id:
        type: string
        example: 20a5ea46-a4ee-4542-93f4-9040a4ec078b
        description: Represents the employee process unique id in form of UUID
    get:
      displayName: Get Employee by ID
      description: Get Employee process status by ID
      responses:
        200:
          body:
            application/json:
              example: !include examples/get_employee_example.json
        404:
          body:
            application/json:
              type: ErrorResponse
 
/queue/elements/{id}:
    displayName: Get queue status for Employees onboarding process with specific ID
    uriParameters:
      id:
        type: string
        example: 20a5ea46-a4ee-4542-93f4-9040a4ec078b
        description: Represents the employee onboarding process unique id in form of UUID
    get:
      displayName: Get Queue Status
      description: Get queue status for Employees onboarding process by temporary ID
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "message": "In progress"
                }
        303:
          description: After asynchronous processing is complete to indicate the final location of the new resource
          headers:
            Location:
              description: The url where to fetch the actual entity created asynchronously
              example: [ http://{hostname}/employees/{employee-id} ]
        404:
          body:
            application/json:
              type: ErrorResponse
